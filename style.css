/* Color palette */
:root {
  /*
   * Updated color palette for a more modern, elegant look inspired by marble.
   * Primary colour is a deep slate that complements dark marble.
   * Secondary colour is a warm gold tone that works well on buttons and accents.
   */
  --primary-color: #2c3e50; /* deep slate */
  --secondary-color: #b89b5e; /* warm gold */
  --light-bg: #f5f5f5; /* very light background for contrast */
  --dark-text: #2c3e50; /* match primary colour for headings/text */
  --light-text: #ffffff; /* white text for dark backgrounds */
}

body {
  margin: 0;
  font-family: Arial, sans-serif;
  line-height: 1.6;
  color: var(--dark-text);
  /*
   * Use a subtle marble texture as the global page background. The
   * image is tileable and will scale to cover the viewport while
   * remaining fixed during scroll.
   */
  /*
   * Use a marble texture as the global page background. The image will
   * cover the viewport and remain fixed during scroll. In addition,
   * convert the body into a flex container so the footer sticks to
   * the bottom of the page on shorter pages. A minimum height of
   * 100vh ensures the content occupies the full viewport height.
   */
  background-image: url('marble_light.png');
  background-size: cover;
  background-repeat: repeat;
  background-attachment: fixed;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* Prevent horizontal scrolling on small screens */
html, body {
  overflow-x: hidden;
}

/* Hamburger menu button styling */
.menu-toggle {
  display: none;
  background: none;
  border: none;
  font-size: 2rem;
  color: var(--light-text);
  cursor: pointer;
}

/* Ensure the root element spans the full viewport height so the body
 * flexbox layout can push the footer to the bottom when content is
 * short. */
html {
  height: 100%;
}

/* Allow the main content area to grow and fill remaining vertical space. */
main {
  flex: 1;
}

header {
  /*
   * A fixed dark header that stays visible while scrolling. A solid
   * black background with slight transparency ensures good contrast
   * against both light and dark sections of the site. The z-index
   * guarantees it sits above other content. Width 100% prevents
   * horizontal shifts on smaller screens. Padding provides space
   * around the logo and navigation links.
   */
  /*
   * Use a solid black background on the header instead of the semi‑transparent
   * dark overlay. This increases contrast between the navigation
   * bar and the content behind it, as requested by the user. Keep
   * the text colour white for maximum readability.
   */
  background-color: #000000;
  color: var(--light-text);
  padding: 1rem 0;
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1000;
}

header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 960px;
  margin: 0 auto;
  padding: 0 1rem;
}

header .logo a {
  font-size: 1.5rem;
  color: var(--light-text);
  text-decoration: none;
  font-weight: bold;
}

header nav ul {
  list-style: none;
  display: flex;
  gap: 1rem;
  margin: 0;
  padding: 0;
}

header nav a {
  color: var(--light-text);
  text-decoration: none;
  transition: opacity 0.2s ease;
}

header nav a:hover {
  opacity: 0.8;
}

/*
 * Prevent horizontal scrolling on the hero and main sections.  On some mobile
 * devices the combination of large images and margins can create a tiny
 * horizontal scroll area.  Setting overflow-x: hidden on these elements
 * ensures the layout stays anchored and users cannot slide the page left
 * or right.【345653963197261†screenshot】
 */
.hero,
main {
  overflow-x: hidden;
}

/*
 * The hero section now uses a dark marble texture with gold veins to
 * immediately convey elegance. Text remains light for contrast.
 */
.hero {
  background-image: url('marble_dark.png');
  background-size: cover;
  background-position: center;
  color: var(--light-text);
  padding: 4rem 1rem;
  text-align: center;
}

.hero-content {
  max-width: 800px;
  margin: 0 auto;
}

.hero h1 {
  /*
   * Use responsive typography for the hero headline.  The `clamp` function
   * scales the text smoothly between small and large screens.  This
   * prevents the heading from overflowing the viewport on mobile
   * devices while still looking prominent on desktops.  The values
   * represent: minimum size 2rem, preferred size that grows with
   * viewport width (5% of the viewport width plus 1rem), and a
   * maximum size of 3.5rem.
   */
  font-size: clamp(2rem, 5vw + 1rem, 3.5rem);
  margin-bottom: 0.5rem;
}

.hero p {
  /*
   * Apply a responsive scale to the hero paragraph as well.  This
   * text adjusts based on the viewport width: it never shrinks
   * smaller than 1rem and never grows larger than 1.5rem, with a
   * gradual increase in between controlled by the viewport width.
   */
  font-size: clamp(1rem, 2.5vw + 0.5rem, 1.5rem);
  margin-bottom: 1.5rem;
}

.tagline {
  font-style: italic;
  font-size: 1.1rem;
  margin-bottom: 1rem;
}

.passions {
  padding: 2rem 1rem;
  max-width: 960px;
  margin: 0 auto 2rem auto;
}

.passions h2 {
  text-align: center;
  margin-bottom: 1rem;
}

.passion-list {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.passion-card {
  background-color: #ffffff;
  border-radius: 6px;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Photo gallery styles */
.photo-gallery {
  padding: 2rem 1rem;
  max-width: 960px;
  margin: 0 auto;
  text-align: center;
}

.photo-gallery h2 {
  margin-bottom: 0.5rem;
}

.photo-gallery p {
  margin-bottom: 1.5rem;
}

.gallery-grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.gallery-grid img {
  width: 100%;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn {
  display: inline-block;
  background-color: var(--secondary-color);
  color: var(--light-text);
  padding: 0.75rem 1.5rem;
  border-radius: 4px;
  text-decoration: none;
  font-weight: bold;
  transition: background-color 0.3s ease;
}

.btn:hover {
  /* Darken the warm gold on hover for a subtle interaction effect */
  background-color: #997747;
}

.cta {
  text-align: center;
  padding: 2rem 1rem;
}

main section {
  margin-bottom: 2rem;
}

.projects,
.work,
.contact {
  padding: 2rem 1rem;
  max-width: 960px;
  margin: 0 auto;
}

.projects h1,
.work h1,
.contact h1 {
  text-align: center;
  margin-bottom: 1rem;
}

.project-list,
.work-list {
  display: grid;
  gap: 1rem;
}

.project-list {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.project-card,
.work-item {
  background-color: #ffffff;
  border-radius: 6px;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.project-card h2,
.work-item h2 {
  margin-top: 0;
}

.contact ul {
  list-style: none;
  padding: 0;
  margin: 0 0 1rem 0;
}

.contact li {
  margin-bottom: 0.5rem;
}

.contact a {
  color: var(--primary-color);
  text-decoration: none;
}

.contact a:hover {
  text-decoration: underline;
}

.contact form {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.contact label {
  font-weight: bold;
}

.contact input,
.contact textarea {
  padding: 0.5rem;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  font-family: inherit;
  font-size: 1rem;
}

.contact button {
  width: fit-content;
  padding: 0.5rem 1rem;
  background-color: var(--secondary-color);
  color: var(--light-text);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.contact button:hover {
  background-color: #997747;
}

/*
 * Footer styling: use a solid black background with white text to
 * improve contrast and clearly separate the page content from the
 * bottom of the viewport. The padding provides breathing room
 * around the copyright notice.
 */
footer {
  background-color: #000000;
  color: #ffffff;
  text-align: center;
  padding: 1rem;
}

/*
 * Responsive design adjustments
 *
 * The following rules make the site more adaptable across different
 * screen sizes. We introduce a simple CSS reset for box sizing and
 * responsive images, define a reusable container class for
 * consistent horizontal padding, scale typography using the `clamp`
 * function, and tweak grid layouts so the photo gallery and hobby
 * cards wrap gracefully on narrow screens. Media queries adjust the
 * layout of the header navigation and section padding for tablets
 * and mobile devices.
 */

/* Box-sizing reset ensures padding and border are included in
   element dimensions */
*, *::before, *::after {
  box-sizing: border-box;
}

/* Make images responsive by default */
img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* A flexible container for consistent margins and padding */
.container {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Fluid typography scales headings and paragraphs based on viewport */
h1 {
  font-size: clamp(1.8rem, 3vw + 1rem, 3rem);
}

h2 {
  font-size: clamp(1.4rem, 2vw + 0.8rem, 2rem);
}

p {
  font-size: clamp(0.95rem, 1vw + 0.6rem, 1.1rem);
}

/* Adaptive grid layouts for the gallery and hobby cards */
.gallery-grid {
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
}

.passion-list {
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
}

/* Make form controls full width on narrow devices */
.contact .form-group,
.contact form input,
.contact form textarea,
.contact form button {
  width: 100%;
}

/* Tablet breakpoint: allow header to wrap and add row gaps */
@media (max-width: 900px) {
  header .container {
    flex-wrap: wrap;
  }
  header nav ul {
    flex-wrap: wrap;
    row-gap: 0.5rem;
  }
}

/* Mobile breakpoint: stack header elements and centre nav links */
@media (max-width: 600px) {
  header .container {
    flex-direction: column;
    align-items: stretch;
  }
  header nav ul {
    justify-content: center;
  }
  header nav a {
    padding: 0.5rem 0.75rem;
  }
  /*
   * On small screens the photo gallery becomes a single column.  Using
   * !important ensures this override takes precedence over the base grid
   * definition which may set multiple columns via auto-fit.
   */
  .gallery-grid {
    display: grid;
    grid-template-columns: 1fr !important;
  }
  .passion-list {
    grid-template-columns: 1fr;
  }
  section {
    padding: 1.75rem 1rem;
  }
}

/* Additional mobile menu styles */
/*
 * At widths up to 900px we treat the navigation as mobile: a
 * hamburger button is shown and the nav list is hidden by default.
 * A wider breakpoint ensures the menu appears on most handheld
 * devices, even those with high‑resolution screens.  The use of
 * !important overrides the base flex display on the nav list.
 */
@media (max-width: 900px) {
  /* Show the hamburger button */
  .menu-toggle {
    display: block;
  }
  /* Hide navigation links by default and stack them vertically */
  header nav ul {
    display: none !important;
    flex-direction: column;
    align-items: center;
    width: 100%;
    background-color: #000;
    margin: 0;
    padding: 0.5rem 0;
  }
  /* When the menu is toggled on, display the links */
  header nav ul.show {
    display: flex !important;
  }
  header nav li {
    margin: 0.5rem 0;
  }
}

/*
 * Reduce hero text sizes on very small screens to prevent text
 * overflowing the viewport.  Override the more specific `.hero h1` rule
 * defined earlier.
 */
@media (max-width: 600px) {
  .hero h1 {
    font-size: 2rem;
  }
  .hero p {
    font-size: 1rem;
  }
}

/* Very small devices: tighten spacing */
@media (max-width: 380px) {
  header nav ul {
    gap: 0.5rem;
  }
  .hero p {
    padding: 0 0.5rem;
  }
}